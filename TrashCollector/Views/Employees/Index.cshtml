@model TrashCollector.Models.EmployeeCustomersViewModel

@{
    ViewBag.Title = "Index";
    ViewBag.TodaysDay = Model.selectedFilterDay;
}
@if (Model.selectedFilterDay == null)
{<h1> Todays Pickup</h1>
}
@if (Model.selectedFilterDay == (DateTime.Today.DayOfWeek).ToString())
{
    <h1>Todays Pickup</h1>
}
@if (Model.selectedFilterDay != null && Model.selectedFilterDay != (DateTime.Today.DayOfWeek).ToString())
{
    <h1>@Model.selectedFilterDay Pickup</h1>
}
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.customers[0].FirstName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.customers[0].LastName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.customers[0].StreetAddress)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.customers[0].City)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.customers[0].State)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.customers[0].ZipCode)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.customers[0].PickUpConfirmation)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.customers[0].Balance)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model.customers)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StreetAddress)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.City)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.State)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ZipCode)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PickUpConfirmation)
            </td>
            <td>
                <spans>$</spans>
                @Html.DisplayFor(modelItem => item.Balance)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.ID })
                @Html.ActionLink("View Map", "CustomerLocationAsync", new { id = item.ID })
            </td>
        </tr>
    }

</table>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.selectedFilterDay, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.selectedFilterDay, Model.daysOfWeek)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Filter" class="btn btn-default" />
            </div>
        </div>
    </div>
}